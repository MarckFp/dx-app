name: 'Deploy 🚀'

on:
  push:
    tags:
      - "*.*.*"

env:
  GH_TOKEN: ${{ github.token }}
  NDK_VERSION: "27.2.12479018"

jobs:
  deploy:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        # Windows: Currently stopped until Dioxus 0.6.2 is released with a patch to fix Windows binaries
#          - os: 'windows-latest'
#            target: 'x86_64-pc-windows-msvc'
#            name: 'Windows x86_64 🪟'
#            platform: desktop
#          - os: 'windows-latest'
#            target: 'aarch64-pc-windows-msvc'
#            name: 'Windows ARM64 🪟'
#            platform: desktop
          # MacOS
          - os: 'macos-latest'
            target: 'aarch64-apple-darwin'
            name: 'MacOS ARM64 🍏'
            platform: desktop
          - os: 'macos-13'
            target: 'x86_64-apple-darwin'
            name: 'MacOS x86_64 🍏'
            platform: desktop
          # Linux
          - os: 'ubuntu-latest'
            target: 'x86_64-unknown-linux-gnu'
            name: 'Linux 🐧'
            platform: desktop
          # Android
          - os: 'ubuntu-latest'
            target: 'aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android'
            name: 'Android 🤖'
            platform: android
          # iOS
          - os: 'macos-latest'
            target: 'aarch64-apple-ios aarch64-apple-ios-sim'
            name: 'iOS 📱'
            platform: ios
          # Web
          - os: 'ubuntu-latest'
            target: ''
            name: 'Web 🌐'
            platform: web
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
      contents: write
      discussions: write
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Cache Rust 🦀
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ matrix.target }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set Cargo version 📦
        shell: bash
        env:
          RELEASE_TAG: ${{ github.ref_name }}
        run: |
          sed -i "s/0\\.0\\.0-git/${RELEASE_TAG##*/v}/" Cargo.toml
          sed -i "s/0\\.0\\.0-git/${RELEASE_TAG##*/v}/" Cargo.lock

      - name: Setup Rust Targets 🦀
        if: ${{ matrix.platform != 'web'}}
        run: rustup target add ${{ matrix.target }}

      - name: Setup Java ☕
        if: ${{ matrix.platform == 'android'}}
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Setup Android 🤖
        if: ${{ matrix.platform == 'android'}}
        uses: android-actions/setup-android@v3

      - name: Setup Dependencies & Configs 🛠️
        run: |
          if [[ ${{ matrix.platform }} == "android" ]]; then
            sdkmanager "ndk;$NDK_VERSION"
          elif [[ ${{ matrix.os }} == "macos-latest" ]]; then
            brew install openssl
          elif [[ ${{ matrix.os }} == "ubuntu-latest" ]]; then
            sudo apt update -y && sudo apt install libwebkit2gtk-4.1-dev build-essential libssl-dev libayatana-appindicator3-dev librsvg2-dev -y
          elif [[ ${{ matrix.platform }} == "web" ]]; then
            sed -i '/^\[web\.app\]$/a base_path = "dx-app"' Dioxus.toml
          fi
          cargo install cargo-binstall
          cargo binstall dioxus-cli -y

      - name: Setup NASM for Windows 🛠️
        if: ${{ matrix.target == 'x86_64-pc-windows-msvc' }}
        uses: ilammy/setup-nasm@v1

      - name: Build & Deploy ${{ matrix.name }} 🚀
        if: ${{  matrix.platform != 'android' }}
        run: |
          if [[ ${{ matrix.platform }} == "android" ]]; then
            dx build --release --platform android
          else
            dx bundle --release --platform ${{ matrix.platform }} --features bundle
          fi

          if [[ ${{ matrix.platform }} == "web" ]]; then
            cp target/dx/dx-app/release/web/public/index.html target/dx/dx-app/release/web/public/404.html
          fi

      - name: Upload web files as artifacts 📦
        if: ${{ matrix.platform == 'web'}}
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/dx/dx-app/release/web/public/

      - name: Deploy to Github Pages 🌐
        if: ${{ matrix.platform == 'web'}}
        id: deployment
        uses: actions/deploy-pages@v4


      - name: Upload Artifacts 📦
        run: |
          if [[ ${{ matrix.name }} == "Windows x86_64 🪟" ]]; then
            gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/windows/bundle/dx-app.exe
          elif [[ ${{ matrix.name }} == "Windows ARM64 🪟" ]]; then
            gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/windows/bundle/dx-app.exe
          elif [[ ${{ matrix.name }} == "Linux 🐧" ]]; then
            gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/linux/bundle/deb/DxApp_${{ github.ref_name }}_amd64.deb
            gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/linux/bundle/rpm/DxApp-${{ github.ref_name }}-.x86_64.rpm
            gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/linux/bundle/appimage/DxApp_${{ github.ref_name }}_amd64.AppImage
          elif [[ ${{ matrix.name }} == "MacOS ARM64 🍏" ]]; then
            gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/macos/bundle/dmg/DxApp_${{ github.ref_name }}_aarch64.dmg
          elif [[ ${{ matrix.name }} == "MacOS x86_64 🍏" ]]; then
            gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/macos/bundle/dmg/DxApp_${{ github.ref_name }}_x64.dmg
          elif [[ ${{ matrix.name }} == "iOS 📱" ]]; then
            zip -r ios.zip target/dx/dx-app/release/ios/DxApp.app
            gh release upload ${{ github.ref_name }} ios.zip
          elif [[ ${{ matrix.name }} == "Android 🤖" ]]; then
            ls -l target/dx/dx-app/release/android/app/app/build/outputs/apk/debug/
            gh release upload ${{ github.ref_name }} target/dx/dx-app/release/android/app/app/build/outputs/apk/debug/DxApp_${{ github.ref_name }}.apk
          fi
