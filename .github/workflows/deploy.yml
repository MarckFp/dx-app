name: 'Deploy 🚀'

on:
  push:
    tags:
      - "*.*.*"

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  deploy:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            name: 'Windows x86_64 🪟'
            platform: desktop
          - os: 'windows-latest'
            target: 'aarch64-pc-windows-msvc'
            name: 'Windows ARM64 🪟'
            platform: desktop
          # MacOS
          - os: 'macos-latest'
            target: 'aarch64-apple-darwin'
            name: 'MacOS ARM64 🍏'
            platform: desktop
          - os: 'macos-13'
            target: 'x86_64-apple-darwin'
            name: 'MacOS x86_64 🍏'
            platform: desktop
          # Linux
          - os: 'ubuntu-latest'
            target: 'x86_64-unknown-linux-gnu'
            name: 'Linux 🐧'
            platform: desktop
          # Android
          - os: 'ubuntu-latest'
            target: 'aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android'
            name: 'Android 🤖'
            platform: android
          # iOS
          - os: 'macos-latest'
            target: 'aarch64-apple-ios aarch64-apple-ios-sim'
            name: 'iOS 📱'
            platform: ios
          # Web
          - os: 'ubuntu-latest'
            target: ''
            name: 'Web 🌐'
            platform: web
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
      contents: write
      discussions: write
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Set Cargo.toml version
        shell: bash
        env:
          RELEASE_TAG: ${{ github.ref_name }}
        run: |
          mv Cargo.toml Cargo.toml.orig
          sed "s/0\\.0\\.0-git/${RELEASE_TAG##*\/v}/" Cargo.toml.orig >Cargo.toml
          mv Cargo.lock Cargo.lock.orig
          sed "s/0\\.0\\.0-git/${RELEASE_TAG##*\/v}/" Cargo.lock.orig >Cargo.lock

      - name: Setup Rust 🦀
        run: rustup target add ${{ matrix.target }}

      - name: Setup Java ☕
        if: ${{ matrix.platform == 'android'}}
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Setup Android 🤖
        if: ${{ matrix.platform == 'android'}}
        uses: android-actions/setup-android@v3

      - name: Setup NDK 🤖
        if: ${{ matrix.platform == 'android'}}
        run: |
          sdkmanager "ndk;27.2.12479018"

      - name: Setup OpenSSL 🛠️ for MacOS
        if: matrix.os == 'macos-latest'
        run: brew install openssl

      - name: Setup NASM 🛠️ for Windows
        if: ${{ matrix.target == 'x86_64-pc-windows-msvc' }}
        uses: ilammy/setup-nasm@v1

      - name: Setup dependencies 🛠️ for Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Setup config 🛠️ for Web
        if: ${{ matrix.platform == 'web' }}
        run: sed -i '/^\[web\.app\]$/a base_path = "dx-app"' Dioxus.toml

      - name: Deploy ${{ matrix.name }}
        if: ${{  matrix.name != 'Android 🤖' }}
        run: |
          cargo install cargo-binstall --version 1.10.19
          cargo binstall dioxus-cli -y
          dx bundle --release --platform ${{ matrix.platform }} --features bundle

      - name: Deploy ${{ matrix.name }}
        if: ${{  matrix.name == 'Android 🤖' }}
        run: |
          cargo install cargo-binstall --version 1.10.19
          cargo binstall dioxus-cli -y
          dx build --release --platform ${{ matrix.platform }}

      - name: Add 404 Page && base path
        if: ${{ matrix.platform == 'web'}}
        run: cp target/dx/dx-app/release/web/public/index.html target/dx/dx-app/release/web/public/404.html

      - name: Upload web files as artifacts
        if: ${{ matrix.platform == 'web'}}
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/dx/dx-app/release/web/public/

      - name: Deploy to Github Pages
        if: ${{ matrix.platform == 'web'}}
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Upload Windows x86_64
        if: ${{ matrix.name == 'Windows x86_64 🪟' }}
        run: gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/windows/bundle/dx-app.exe

      - name: Upload Windows ARM
        if: ${{ matrix.name == 'Windows ARM64 🪟' }}
        run: gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/windows/bundle/dx-app.exe

      - name: Upload Linux
        if: ${{ matrix.name == 'Linux 🐧' }}
        run: |
          gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/linux/bundle/deb/DxApp_${{ github.ref_name }}_amd64.deb
          gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/linux/bundle/rpm/DxApp-${{ github.ref_name }}-.x86_64.rpm
          gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/linux/bundle/appimage/DxApp_${{ github.ref_name }}_amd64.AppImage

      - name: Upload MacOS ARM64
        if: ${{ matrix.name == 'MacOS ARM64 🍏' }}
        run: gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/macos/bundle/dmg/DxApp_${{ github.ref_name }}_aarch64.dmg

      - name: Upload MacOS x86_64
        if: ${{ matrix.name == 'MacOS x86_64 🍏' }}
        run: gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/macos/bundle/dmg/DxApp_${{ github.ref_name }}_x64.dmg

      - name: Upload Android
        if: ${{  matrix.name == 'Android 🤖' }}
        run: |
          gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/android/bundle/

      - name: Upload iOS
        if: ${{ matrix.name == 'iOS 📱' }}
        run: |
          zip -r ios.zip target/dx/dx-app/release/ios/DxApp.app
          gh release upload ${{ github.ref_name }} ios.zip
